
import { useCallback } from 'react';
import { EmailService } from '@/services/email.service';
import { useToast } from '@/hooks/use-toast';

export const useEmailNotifications = () => {
  const { toast } = useToast();

  const sendOrderConfirmation = useCallback(async (orderId: string) => {
    try {
      console.log(`üìß [EmailNotifications] Envoi confirmation commande ${orderId}`);
      const success = await EmailService.sendOrderConfirmation(orderId);
      
      if (success) {
        console.log(`‚úÖ [EmailNotifications] Confirmation envoy√©e pour ${orderId}`);
        toast({
          title: "Email envoy√©",
          description: "Confirmation de commande envoy√©e au client"
        });
      } else {
        console.error(`‚ùå [EmailNotifications] √âchec envoi confirmation ${orderId}`);
      }
      
      return success;
    } catch (error) {
      console.error(`‚ùå [EmailNotifications] Erreur envoi confirmation ${orderId}:`, error);
      return false;
    }
  }, [toast]);

  const sendShippingNotification = useCallback(async (orderId: string, trackingNumber?: string) => {
    try {
      console.log(`üìß [EmailNotifications] Envoi notification exp√©dition ${orderId}`);
      const success = await EmailService.sendShippingNotification(orderId, trackingNumber);
      
      if (success) {
        console.log(`‚úÖ [EmailNotifications] Notification exp√©dition envoy√©e pour ${orderId}`);
        toast({
          title: "Email envoy√©",
          description: "Notification d'exp√©dition envoy√©e au client"
        });
      } else {
        console.error(`‚ùå [EmailNotifications] √âchec envoi notification ${orderId}`);
      }
      
      return success;
    } catch (error) {
      console.error(`‚ùå [EmailNotifications] Erreur envoi notification ${orderId}:`, error);
      return false;
    }
  }, [toast]);

  const sendLotteryReminders = useCallback(async () => {
    try {
      console.log(`üìß [EmailNotifications] Envoi rappels loteries`);
      const success = await EmailService.sendLotteryReminders();
      
      if (success) {
        console.log(`‚úÖ [EmailNotifications] Rappels loteries envoy√©s`);
        toast({
          title: "Rappels envoy√©s",
          description: "Rappels de loteries envoy√©s aux clients"
        });
      } else {
        console.error(`‚ùå [EmailNotifications] √âchec envoi rappels`);
      }
      
      return success;
    } catch (error) {
      console.error(`‚ùå [EmailNotifications] Erreur envoi rappels:`, error);
      return false;
    }
  }, [toast]);

  return {
    sendOrderConfirmation,
    sendShippingNotification,
    sendLotteryReminders
  };
};
