
import { useCallback } from 'react';
import { useMockupCapture } from './useMockupCapture';
import { toast } from '@/components/ui/use-toast';

interface HDCaptureData {
  hdRectoUrl?: string;
  hdVersoUrl?: string;
}

export const useHDCaptureOnAddToCart = () => {
  const { captureAllHDVisuals, isCapturing } = useMockupCapture();

  const captureForProduction = useCallback(async (): Promise<HDCaptureData> => {
    try {
      console.log('üé¨ [HDCaptureOnAddToCart] D√©but capture pour production');
      
      toast({
        title: "G√©n√©ration des fichiers de production...",
        description: "Cr√©ation des visuels haute r√©solution",
      });

      const hdResult = await captureAllHDVisuals();
      
      if (hdResult.hdRectoUrl || hdResult.hdVersoUrl) {
        console.log('üéâ [HDCaptureOnAddToCart] Capture HD r√©ussie:', hdResult);
        
        toast({
          title: "Fichiers de production cr√©√©s",
          description: "Les visuels haute r√©solution sont pr√™ts",
        });
        
        return hdResult;
      } else {
        console.warn('‚ö†Ô∏è [HDCaptureOnAddToCart] Aucun fichier HD g√©n√©r√©');
        
        toast({
          variant: "destructive",
          title: "Erreur de g√©n√©ration",
          description: "Impossible de cr√©er les fichiers de production",
        });
        
        return {};
      }
    } catch (error) {
      console.error('‚ùå [HDCaptureOnAddToCart] Erreur:', error);
      
      toast({
        variant: "destructive",
        title: "Erreur de capture",
        description: "Impossible de g√©n√©rer les fichiers HD",
      });
      
      return {};
    }
  }, [captureAllHDVisuals]);

  return {
    captureForProduction,
    isCapturing
  };
};
